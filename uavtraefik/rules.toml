# rules.toml


######Portainer########

[frontends]
  [frontends.portainer]
  entrypoints = ["http"]
  backend = "portainer"
  passHostHeader = true
    [frontends.portainer.routes.route_1]
    rule = "Host: 192.168.56.102; PathPrefixStrip: /portainer"

[backends]
  [backends.portainer]
    [backend.portainer.servers]
      [backends.portainer.servers.server1]
      url = "http://portainer:9000"
      weight = 2
    [backends.portainer.loadBalancer]
      method = "drr"

#########Hass############

  [frontends.hass]
  entrypoints = ["http"]
  backend = "hass"
  passHostHeader = true
    [frontends.hass.routes.route_1]
    rule = "Host: 192.168.56.102; PathPrefixStrip: /"

  [backends.hass]
    [backend.hass.servers]
      [backends.hass.servers.server1]
      url = "http://homeassistant:8123"
      weight = 2
    [backends.hass.loadBalancer]
      method = "drr"



######Whoami########

  [frontends.whoami]
  entrypoints = ["http"]
  backend = "whoami"
  passHostHeader = true
    [frontends.whoami.routes.route_1]
    rule = "Host: 192.168.56.102; PathPrefixStrip: /whoami"

  [backends.whoami]
    [backend.whoami.servers]
      [backends.whoami.servers.server1]
      url = "http://whoami:80"
      weight = 3
    [backends.whoami.loadBalancer]
      method = "drr"



#####Traefik####
#
#  [frontends.traefik]
#  entrypoints = ["http", "https"]
#  backend = "traefik"
#  passHostHeader = true
#    [frontends.traefik.routes.route_1]
#    rule = "Host: 192.168.56.102; PathPrefixStrip: /traefik"
#
#  [backends.traefik]
#    [backend.traefik.servers]
#      [backends.traefik.servers.server1]
#      url = "http://traefik:8080"
#      weight = 4
#    [backends.traefik.loadBalancer]
#      method = "drr"
#
#
#
#####NodeRed####

  [frontends.nodered]
  entrypoints = ["http"]
  backend = "nodered"
  passHostHeader = true
    [frontends.nodered.routes.route_1]
    rule = "Host: 192.168.56.102; PathPrefixStrip: /nodered"

  [backends.nodered]
    [backend.nodered.servers]
      [backends.nodered.servers.server1]
      url = "http://nodered:1880"
      weight = 3
    [backends.nodered.loadBalancer]
      method = "drr"


#####Mosquitto####

#  [frontends.mosquitto]
#  entrypoints = ["http"]
#  backend = "mosquitto"
#  passHostHeader = true
#    [frontends.mosquitto.routes.route_1]
#    rule = "Host: 192.168.56.102; PathPrefixStrip: /mosquitto"

  [backends.mosquitto]
    [backend.mosquitto.servers]
      [backends.mosquitto.servers.server1]
      url = "http://mosquitto:1883"
      weight = 3
    [backends.mosquitto.loadBalancer]
      method = "drr"


#####Tasmoadmin####

  [frontends.tasmoadmin]
  entrypoints = ["http"]
  backend = "tasmoadmin"
  passHostHeader = true
    [frontends.tasmoadmin.routes.route_1]
    rule = "Host: 192.168.56.102; PathPrefixStrip: /tasmoadmin, /login, /start"
    priority = 1

  [backends.tasmoadmin]
    [backend.tasmoadmin.servers]
      [backends.tasmoadmin.servers.server1]
      url = "http://tasmoadmin:80"
      weight = 2
    [backends.tasmoadmin.loadBalancer]
      method = "drr"


#####Grafana####

  [frontends.grafana]
  entrypoints = ["http"]
  backend = "grafana"
  passHostHeader = true
    [frontends.grafana.routes.route_1]
    rule = "Host: 192.168.56.102; PathPrefixStrip: /grafana"

    [backend.grafana.servers]
      [backends.grafana.servers.server1]
      url = "http://grafana:3000"
      weight = 2
    [backends.grafana.loadBalancer]
      method = "drr"

#####Influxdb####

#  [frontends.influxdb]
#  entrypoints = ["http"]
#  backend = "influxdb"
#  passHostHeader = true
#    [frontends.influxdb.routes.route_1]
#    rule = "Host: 192.168.56.102; PathPrefixStrip: /influxdb"


  [backends.influxdb]
    [backend.influxdb.servers]
      [backends.influxdb.servers.server1]
      url = "http://influxdb:8086"
      weight = 2
    [backends.influxdb.loadBalancer]
      method = "drr"

#  [backends.telegraf]
#    [backend.telegraf.servers]
#      [backends.telegraf.servers.server1]
#      url = "http://influxdb:8086"
#      weight = 2
#    [backends.telegraf.loadBalancer]
#      method = "drr"


#####Nextcloud####
<<<<<<< HEAD

  [frontends.nextcloud]
  entrypoints = ["http"]
  backend = "nextcloud"
  passHostHeader = true
    [frontends.nextcloud.routes.route_1]
    rule = "Host: 192.168.56.102; PathPrefixStrip: /nextcloud"

  [backends.nextcloud]
    [backend.nextcloud.servers]
      [backends.nextcloud.servers.server1]
      url = "http://nextcloud:80"
      weight = 2
    [backends.nextcloud.loadBalancer]
      method = "drr"

  [backends.mariadb]
    [backend.mariadb.servers]
      [backends.mariadb.servers.server1]
      url = "http://mariadb:3306"
      weight = 2
    [backends.mariadb.loadBalancer]
      method = "drr"


=======
#
#  [frontends.nextcloud]
#  entrypoints = ["http", "https"]
#  backend = "nextcloud"
#  passHostHeader = true
#    [frontends.nextcloud.routes.route_1]
#    rule = "Host: 192.168.56.102; PathPrefixStrip: /nextcloud"
#
#  [backends.nextcloud]
#    [backend.nextcloud.servers]
#      [backends.nextcloud.servers.server1]
#      url = "http://nextcloud:80"
#      weight = 2
#    [backends.nextcloud.loadBalancer]
#      method = "drr"
#
#  [backends.mariadb]
#    [backend.mariadb.servers]
#      [backends.mariadb.servers.server1]
#      url = "http://mariadb:80"
#      weight = 2
#    [backends.mariadb.loadBalancer]
#      method = "drr"
#
#
>>>>>>> 0fcfb0731e54829137126ed39f1c87cf295bcb3e
#####Pma####
#
#  [frontends.pma]
#  entrypoints = ["http", "https"]
#  backend = "pma"
#  passHostHeader = true
#    [frontends.pma.routes.route_1]
#    rule = "Host: 192.168.56.102; PathPrefixStrip: /pma"
#
#  [backends.pma]
#    [backend.pma.servers]
#      [backends.pma.servers.server1]
#      url = "http://pma:80"
#      weight = 2
#    [backends.pma.loadBalancer]
#      method = "drr"
#
#
#
#
#
#
##[backends]
##  [backends.portainer]
##    [backend.portainer.servers]
##      [backends.portainer.servers.server1]
##      url = "http://portainer:9000"
##      weight = 2
##    [backends.portainer.loadBalancer]
##      method = "drr"
#
#
##[backends]
##  [backends.whoami]
##    [backend.whoami.servers]
##      [backends.whoami.servers.server1]
##      url = "http://whoami:80"
##      weight = 3
##    [backends.whoami.loadBalancer]
##      method = "drr"
#
#
##[backends]
##  [backends.traefik]
##    [backend.traefik.servers]
##      [backends.traefik.servers.server1]
##      url = "http://traefik:8080"
##      weight = 4
##    [backends.traefik.loadBalancer]
##      method = "drr"
#
##[backends]
##  [backends.hass]
##    [backend.hass.servers]
##      [backends.hass.servers.server1]
##      url = "http://homeassistant:8123"
##      weight = 5
##    [backends.hass.loadBalancer]
##      method = "drr"
#
#
##[backends]
##  [backends.nodered]
##    [backend.nodered.servers]
##      [backends.nodered.servers.server1]
##      url = "http://nodered:80"
##      weight = 3
##    [backends.nodered.loadBalancer]
##      method = "drr"
#
##[backends]
##  [backends.mosquitto]
##    [backend.mosquitto.servers]
##      [backends.mosquitto.servers.server1]
##      url = "http://mosquitto:80"
##      weight = 4
##    [backends.mosquitto.loadBalancer]
##      method = "drr"
#
##[backends]
##  [backends.tasmoadmin]
##    [backend.tasmoadmin.servers]
##      [backends.tasmoadmin.servers.server1]
##      url = "http://tasmoadmin:80"
##      weight = 2
##    [backends.tasmoadmin.loadBalancer]
##      method = "drr"
#
#
##[backends]
##  [backends.grafana]
##    [backend.grafana.servers]
##      [backends.grafana.servers.server1]
##      url = "http://grafana:80"
##      weight = 2
##    [backends.grafana.loadBalancer]
##      method = "drr"
#
##[backends]
##  [backends.influxdb]
##    [backend.influxdb.servers]
##      [backends.influxdb.servers.server1]
##      url = "http://influxdb:80"
##      weight = 2
##    [backends.influxdb.loadBalancer]
##      method = "drr"
#
#
##[backends]
##  [backends.nextcloud]
##    [backend.nextcloud.servers]
##      [backends.nextcloud.servers.server1]
##      url = "http://nextcloud:80"
##      weight = 2
##    [backends.nextcloud.loadBalancer]
##      method = "drr"
#
##[backends]
##  [backends.mariadb]
##    [backend.mariadb.servers]
##      [backends.mariadb.servers.server1]
##      url = "http://mariadb:80"
##      weight = 2
##    [backends.mariadb.loadBalancer]
##      method = "drr"
#
##[backends]
##  [backends.pma]
##    [backend.pma.servers]
##      [backends.pma.servers.server1]
##      url = "http://pma:80"
##      weight = 2
##    [backends.pma.loadBalancer]
##      method = "drr"

#      [frontends.portainer.headers]
#      allowedHosts = ["portainer"]
#        SSLRedirect = true
#        SSLTemporaryRedirect = true
#        SSLHost = "portainer"
#      STSSeconds = 42
#      STSIncludeSubdomains = true
#      STSPreload = true
#      forceSTSHeader = true
#      frameDeny = true
#      contentTypeNosniff = true
#      browserXSSFilter = true
#

#    [frontends.hass.routes.route_1]
#        rule = "HostRegexp:{catchall:.*}"
#        [frontends.hass.routes.route_1]
#        rule = "Host: 192.168.56.102; PathPrefixStrip: /hass, AddPrefix: /hass"
#        [frontends.hass.routes.matchUrl]
#        rule = "PathPrefixStrip: /"
#        [frontends.hass.routes.rewritehUrl]

#      [frontends.hass.http.auth.forward]
#       addres = "http://192.168.56.102/auth"
#       [frontends.hass.http.requestline.method]
#       POST = true
#       rule = "Host: 192.168.56.102; PathPrefixStrip: /hass; ReplacePath: /"
#       rule = "Host: 192.168.56.102; PathPrefixStrip: /hass; AddPrefix: /hass"
#       rule = "Host: 192.168.56.102; AddPrefix: /hass"
#       [frontends.hass.http.redirect]
#       regex = "^http://192.168.56.102/hass/$"
#       replacement = "^/(.*)$"
#       replacement = "HostRegexp:{catchall:.*}"
#       replacement = "^http://homeassistant/*$"
#      
